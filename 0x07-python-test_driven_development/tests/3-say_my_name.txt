This is the test to test my function: say_my_name(first_name, last_name="")

    >>> say_my_name = __import__('3-say_my_name').say_my_name

Test for correct answers:

    >>> say_my_name("John", "Smith")
    My name is John Smith
    >>> say_my_name("Walter", "White")
    My name is Walter White
    >>> say_my_name("Bob")
    My name is Bob 
    >>> say_my_name("Sebastian", "Carvajal Aristizabal")
    My name is Sebastian Carvajal Aristizabal
    >>> say_my_name("12", "24")
    My name is 12 24
    >>> say_my_name("Walter", "   White")
    My name is Walter    White
    >>> say_my_name("   Walter   ", "White")
    My name is    Walter    White
    >>> say_my_name("", "Doe")
    My name is  Doe
    >>> say_my_name("Joe", "'happy' Doe")
    My name is Joe 'happy' Doe
    >>> say_my_name("Joe", "happy\nDoe")
    My name is Joe happy
    Doe
    >>> say_my_name("[1]", "Doe")
    My name is [1] Doe

Test for errors:
    
    >>> say_my_name(12, "White")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string
    >>> say_my_name(None, "White")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string
    >>> say_my_name("Jane", None)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string
    >>> say_my_name(None)
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string
    >>> say_my_name(["Joe"], "Doe")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string
    >>> say_my_name()
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
